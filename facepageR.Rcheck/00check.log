* using log directory ‘/Users/datavana/Documents/Isi/facepageR.Rcheck’
* using R version 4.1.2 (2021-11-01)
* using platform: x86_64-apple-darwin17.0 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘facepageR/DESCRIPTION’ ... OK
* this is package ‘facepageR’ version ‘0.0.0.9000’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘facepageR’ can be installed ... WARNING
Found the following significant warnings:
  Note: possible error in 'date(min(!!col_created))': unused argument (min(!!col_created)) 
  Note: possible error in 'date(max(!!col_created))': unused argument (max(!!col_created)) 
  Note: possible error in 'date(!!col_created)': unused argument (!!col_created) 
  Note: possible error in 'date(querytime)': unused argument (querytime) 
See ‘/Users/datavana/Documents/Isi/facepageR.Rcheck/00install.out’ for details.
Information on the location(s) of code generating the ‘Note’s can be
obtained by re-running with environment variable R_KEEP_PKG_SOURCE set
to ‘yes’.
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... WARNING
'::' or ':::' imports not declared from:
  ‘jsonlite’ ‘purrr’ ‘tidyr’
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
fp_childcount: no visible binding for global variable ‘objecttype’
fp_childcount: no visible binding for global variable ‘querystatus’
fp_childcount: no visible binding for global variable ‘parent_objectid’
fp_childcount: no visible global function definition for ‘na.omit’
fp_childcount: no visible binding for global variable ‘objectid’
fp_childcount: no visible global function definition for ‘str_pad’
fp_childcount: no visible binding for global variable ‘parent_no’
fp_children: no visible global function definition for ‘fp_coverage’
fp_children: no visible global function definition for ‘fp_paging’
fp_children: no visible global function definition for ‘fp_created’
fp_children_bynode: no visible binding for global variable ‘objecttype’
fp_children_bynode: no visible binding for global variable ‘level’
fp_children_bynode: no visible binding for global variable ‘parent_id’
fp_children_bynode: no visible global function definition for
  ‘replace_na’
fp_children_bynode: no visible binding for global variable ‘parent_no’
fp_children_bynode: no visible binding for global variable
  ‘parent_objectid’
fp_children_bynode: no visible binding for global variable ‘children’
fp_duplicates: no visible binding for global variable ‘parent_objectid’
fp_duplicates: no visible binding for global variable ‘objecttype’
fp_duplicates: no visible binding for global variable ‘querystatus’
fp_duplicates: no visible binding for global variable ‘objectid’
fp_duplicates: no visible binding for global variable ‘parent_id’
fp_get_response_value: no visible binding for global variable ‘.’
fp_get_response_value: no visible binding for global variable ‘jstring’
fp_get_response_value: no visible global function definition for
  ‘spread_values’
fp_get_response_value: no visible global function definition for
  ‘extract2’
fp_getparents: no visible binding for global variable ‘objecttype’
fp_getparents: no visible binding for global variable ‘querystatus’
fp_getparents: no visible binding for global variable ‘parent_id’
fp_getparents: no visible binding for global variable ‘objectid’
fp_getparents: no visible binding for global variable ‘no’
fp_getparents: no visible global function definition for ‘str_replace’
fp_loaddatabase: no visible binding for global variable ‘parent_id’
fp_loaddatabases: no visible global function definition for ‘map_df’
fp_loaddatabases: no visible binding for global variable ‘parent_id’
fp_nodesperseed: no visible global function definition for
  ‘quo_is_null’
fp_nodesperseed: no visible global function definition for ‘fp_addseed’
fp_nodesperseed: possible error in date(min(!!col_created)): unused
  argument (min(!!col_created))
fp_nodesperseed: possible error in date(max(!!col_created)): unused
  argument (max(!!col_created))
fp_nodesperseed: possible error in date(!!col_created): unused argument
  (!!col_created)
fp_nodesperseed: no visible binding for global variable ‘days’
fp_nodesperseed: no visible global function definition for ‘set_names’
fp_parse_response_data: no visible global function definition for
  ‘fp_from_ndjson’
fp_parse_response_data: no visible binding for global variable
  ‘response’
fp_read_csv2: no visible global function definition for ‘read_csv2’
fp_status: no visible binding for global variable ‘level’
fp_status: no visible binding for global variable ‘querytype’
fp_status: no visible binding for global variable ‘querystatus’
fp_status: no visible binding for global variable ‘objecttype’
fp_timing: no visible binding for global variable ‘querystatus’
fp_timing: no visible binding for global variable ‘objecttype’
fp_timing: no visible global function definition for ‘ymd_hms’
fp_timing: no visible binding for global variable ‘querytime’
fp_timing: no visible global function definition for ‘floor_date’
fp_timing: possible error in date(querytime): unused argument
  (querytime)
fp_timing: no visible global function definition for ‘as.period’
fp_timing: no visible global function definition for ‘interval’
fp_timing: no visible binding for global variable ‘queryday’
fp_timing: no visible binding for global variable ‘queryminute’
Undefined global functions or variables:
  . as.period children days extract2 floor_date fp_addseed fp_coverage
  fp_created fp_from_ndjson fp_paging interval jstring level map_df
  na.omit no objectid objecttype parent_id parent_no parent_objectid
  queryday queryminute querystatus querytime querytype quo_is_null
  read_csv2 replace_na response set_names spread_values str_pad
  str_replace ymd_hms
Consider adding
  importFrom("stats", "na.omit")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘fp_read_csv2’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'fp_childcount'
  ‘.data’ ‘.parents’ ‘.silent’ ‘level’

Undocumented arguments in documentation object 'fp_children'
  ‘.data’ ‘col_target’ ‘col_paging’ ‘col_created’ ‘timestamp’ ‘level’

Undocumented arguments in documentation object 'fp_children_bynode'
  ‘data’ ‘.global’ ‘.maxlevel’

Undocumented arguments in documentation object 'fp_duplicates'
  ‘data’ ‘level’

Undocumented arguments in documentation object 'fp_getparents'
  ‘data’ ‘level’

Undocumented arguments in documentation object 'fp_load_nodes'
  ‘dbname’ ‘fields’ ‘.progress’

Undocumented arguments in documentation object 'fp_loaddatabase'
  ‘filename’ ‘shard’

Undocumented arguments in documentation object 'fp_loaddatabases'
  ‘filenames’ ‘fields’

Undocumented arguments in documentation object 'fp_nodesperseed'
  ‘.data’ ‘col_created’ ‘daterange’ ‘prefix’ ‘col_seed’

Undocumented arguments in documentation object 'fp_parse_response_data'
  ‘nodes’ ‘plain’ ‘prefix’

Undocumented arguments in documentation object 'fp_status'
  ‘data’

Undocumented arguments in documentation object 'fp_timing'
  ‘data’ ‘f.objecttype’ ‘f.querystatus’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking installed files from ‘inst/doc’ ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... NONE
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking re-building of vignette outputs ... OK
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 4 WARNINGs, 1 NOTE
